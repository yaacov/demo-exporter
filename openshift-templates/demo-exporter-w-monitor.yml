kind: Template
apiVersion: v1
metadata:
  name: example-exporter
  annotations:
    "openshift.io/display-name": Example Prometheus Exporter
    description: |
      Example Prometheus Exporter Server.
    iconClass: icon-cogs
  labels:
    metrics-infra: demo-exporter
parameters:
- description: The name to of the exporter app. Defaults to 'demo-exporter'.
  name: APPNAME
  value: "demo-exporter"
- description: The namespace to instantiate the exporter under. Defaults to 'kube-system'.
  name: NAMESPACE
  value: "kube-system"
- description: The exporter image to use.
  name: EXPORTER_IMAGE
  value: "docker.io/yaacov/demo-exporter:latest"
- description: The exporter port to use.
  name: EXPORTER_PORT
  value: "8080"
- description: The secret path.
  name: SECRETPATH
  value: "/secrets"
- description: The config path.
  name: CONFIGPATH
  value: "/config"

objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPNAME}
      prometheus: k8s
    name: ${APPNAME}
    namespace: "${NAMESPACE}"
  spec:
    ports:
    - name: web
      port: ${EXPORTER_PORT}
      protocol: TCP
      targetPort: web
    selector:
      k8s-app: ${APPNAME}

- apiVersion: monitoring.coreos.com/v1
  kind: ServiceMonitor
  metadata:
    labels:
      app: ${APPNAME}
      k8s-app: ${APPNAME}
    name: ${APPNAME}
    namespace: "${NAMESPACE}"
  spec:
    endpoints:
    - port: web
    interval: 30s
    namespaceSelector:
      matchNames:
      - "${NAMESPACE}"
    selector:
      matchLabels:
        prometheus: k8s

- apiVersion: v1
  kind: ReplicationController
  metadata:
    labels:
      app: ${APPNAME}
      k8s-app: ${APPNAME}
    name: ${APPNAME}
    namespace: "${NAMESPACE}"
  spec:
    replicas: 1
    selector:
      k8s-app: ${APPNAME}

    template:
      version: v1
      metadata:
        labels:
          k8s-app: ${APPNAME}

      spec:
        containers:
        - image: ${EXPORTER_IMAGE}
          name: ${APPNAME}

          ports:
          - name: web
            protocol: TCP
            containerPort: ${EXPORTER_PORT}

          env:
          - name: EXPORTER_PORT
            value: ${EXPORTER_PORT}
          - name: EXPORTER_CONFIG
            value: ${CONFIGPATH}/config.yml

          volumeMounts:
          - mountPath: ${CONFIGPATH}
            name: exporter-config
          - mountPath: ${SECRETPATH}
            name: exporter-secrets

        # Volumes must be pre congigure
        #
        # Mount point shoud be at
        # /${config path}/config.yml
        # /${secret path}/
        volumes:
        - name: exporter-config
          configMap:
            name: exporter-config
        - name: exporter-secrets
          secret:
            secretName: exporter-secrets
